{
  "name": "Pizzadash",
  "tagline": "This is a node.js application that \"hacks\" your Amazon Dash Button to order you a Domino's pizza! Contributing for Rensselaer Polytechnic Institute Intro to Open Source Class",
  "body": "![Pizza Dash](http://i.imgur.com/DD944Cz.jpg)\r\nPizzaDash\r\n====\r\n[![Join the chat at https://gitter.im/bhberson/pizzadash](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/bhberson/pizzadash?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nThis is a node.js application that \"hacks\" your [Amazon Dash Button](http://www.amazon.com/dashbutton) to order you a [Domino](https://www.dominos.com/)'s pizza!\r\nI was inspired by [this article by Edward Bensen](https://medium.com/@edwardbenson/how-i-hacked-amazon-s-5-wifi-button-to-track-baby-data-794214b0bdd8).\r\nI am using a few npm modules to listen for the button press and place the order: [RIAEvangelist](https://github.com/RIAEvangelist)'s [dominos](https://github.com/RIAEvangelist/node-dominos-pizza-api) and also [hortinstein](https://github.com/hortinstein)'s [Node-Dash-Button](https://github.com/hortinstein/node-dash-button).\r\n\r\nOne idea would be to have this [always running](#always-running) via a local server such as a Raspberry Pi and have on demand pizza ordering whenever you just need a pizza!\r\n\r\nI wrote a blog post about my experience here on [Medium](https://medium.com/@brody_berson/hacking-amazon-s-5-dash-button-to-order-domino-s-pizza-9d19c9d04646)!\r\n\r\nRequirements\r\n====\r\n__pcap__\r\nIf you are running ubuntu you will need to run ` sudo apt-get install libpcap0.8-dev `\r\n\r\nContributing\r\n====\r\n\r\n1. Pull or Fork code.\r\n2. Do cool stuff.\r\n3. Submit a PR.\r\n\r\nSetup/Run\r\n====\r\n1. Run ` npm install ` the first time so all npm requirements will be installed.\r\n2. Find Closest Store\r\n  - Run ` node findStore.js ` and input your 5 digit zipcode, this will return closest store info (Store ID) and their menu.\r\n3. Find Dash Button\r\n  - Run ` sudo node node_modules/node-dash-button/bin/findbutton ` and press the button\r\n4. Edit the ` app.js ` file.\r\n  - Add your store from step 2\r\n  - Edit your address and personal/customer information\r\n  - Edit your order using menu from step 2\r\n  - Add credit card information\r\n5. Create your ` .env ` environmental variable file\r\n  - Add your Amazon Dash Button's address from step 3\r\n  - You can add as much personal information from Step 4 into this file as you want if it makes you more comfortable, just would require some logic changes in the ` app.js ` file.\r\n6. Run` npm start ` and press your Dash Button that you have set up and BAM pizza will be coming soon!\r\n\r\nAlways Running\r\n----\r\nThis [article](http://weworkweplay.com/play/raspberry-pi-nodejs/) shows you what you can do with a [Raspberry Pi](https://www.raspberrypi.org/) to set this up as a node server running all the time on your network and it literally would be the press of a button *whenever* you wanted!\r\n\r\nTo do\r\n----\r\n- Smooth things out and make a setup script for first time users that will create an ` .env ` file automatically for them\r\n- Other ideas?\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}